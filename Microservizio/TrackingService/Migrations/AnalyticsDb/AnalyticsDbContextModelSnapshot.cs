// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackingService.Data;

#nullable disable

namespace TrackingService.Migrations.AnalyticsDb
{
    [DbContext(typeof(AnalyticsDbContext))]
    partial class AnalyticsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrackingService.Data.DimSession", b =>
                {
                    b.Property<int>("SessionSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionSK"));

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFineValidita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioValidita")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("Locale")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("OptOut")
                        .HasColumnType("bit");

                    b.Property<int?>("PageViews")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("SessionEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("SessionStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoSessione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Versione")
                        .HasColumnType("int");

                    b.HasKey("SessionSK");

                    b.ToTable("DimSession", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Data.FactEvent", b =>
                {
                    b.Property<long>("FactEventSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FactEventSK"));

                    b.Property<int?>("ChannelSK")
                        .HasColumnType("int");

                    b.Property<string>("CustomLabel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DateSK")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceSK")
                        .HasColumnType("int");

                    b.Property<int?>("ElementHeight")
                        .HasColumnType("int");

                    b.Property<int?>("ElementLeft")
                        .HasColumnType("int");

                    b.Property<int?>("ElementTop")
                        .HasColumnType("int");

                    b.Property<int?>("ElementWidth")
                        .HasColumnType("int");

                    b.Property<string>("EventCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventLabel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EventSK")
                        .HasColumnType("int");

                    b.Property<decimal?>("EventValue")
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("FunnelData")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FunnelStep")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FunnelStepSK")
                        .HasColumnType("int");

                    b.Property<int?>("JunkSK")
                        .HasColumnType("int");

                    b.Property<int?>("LocationSK")
                        .HasColumnType("int");

                    b.Property<int?>("MouseX")
                        .HasColumnType("int");

                    b.Property<int?>("MouseY")
                        .HasColumnType("int");

                    b.Property<string>("ReplayChunkData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplayChunkType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ScrollDepthPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("ScrollX")
                        .HasColumnType("int");

                    b.Property<int?>("ScrollY")
                        .HasColumnType("int");

                    b.Property<int?>("SessionSK")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSK")
                        .HasColumnType("int");

                    b.Property<decimal?>("TimeSpentSeconds")
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime?>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrackingVersion")
                        .HasColumnType("int");

                    b.Property<int?>("UserSK")
                        .HasColumnType("int");

                    b.Property<int?>("ViewportHeight")
                        .HasColumnType("int");

                    b.Property<int?>("ViewportWidth")
                        .HasColumnType("int");

                    b.HasKey("FactEventSK");

                    b.ToTable("FactEvent", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimChannel", b =>
                {
                    b.Property<int>("ChannelSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelSK"));

                    b.Property<string>("ChannelID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChannelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChannelType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFineValidita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioValidita")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<int>("Versione")
                        .HasColumnType("int");

                    b.HasKey("ChannelSK");

                    b.ToTable("DimChannel", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimDate", b =>
                {
                    b.Property<int>("DateSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DateSK"));

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("DayNameOfWeek")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalQuarter")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("FullDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeekend")
                        .HasColumnType("bit");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<int>("WeekOfYear")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("DateSK");

                    b.ToTable("DimDate", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimDevice", b =>
                {
                    b.Property<int>("DeviceSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceSK"));

                    b.Property<string>("Browser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BrowserVersion")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DeviceSK");

                    b.ToTable("DimDevice", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimEvent", b =>
                {
                    b.Property<int>("EventSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventSK"));

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFineValidita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioValidita")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventLabel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<int>("Versione")
                        .HasColumnType("int");

                    b.HasKey("EventSK");

                    b.ToTable("DimEvent", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimFunnelStep", b =>
                {
                    b.Property<int>("FunnelStepSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FunnelStepSK"));

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFineValidita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInizioValidita")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunnelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FunnelStageOrder")
                        .HasColumnType("int");

                    b.Property<string>("FunnelStepName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("FunnelStepSK");

                    b.ToTable("DimFunnelStep", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimJunk", b =>
                {
                    b.Property<int>("JunkSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JunkSK"));

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsFirstVisit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLogged")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSubscribed")
                        .HasColumnType("bit");

                    b.Property<string>("UserAgentType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("JunkSK");

                    b.ToTable("DimJunk", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimLocation", b =>
                {
                    b.Property<int>("LocationSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationSK"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryISOCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Region")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationSK");

                    b.ToTable("DimLocation", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimTime", b =>
                {
                    b.Property<int>("TimeSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSK"));

                    b.Property<string>("AM_PM")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Hour")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Minute")
                        .HasColumnType("tinyint");

                    b.Property<string>("QuarterHourSlot")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("TimeSlot")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TimeSK");

                    b.ToTable("DimTime", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.DimUser", b =>
                {
                    b.Property<int>("UserSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSK"));

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFineValidita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioValidita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRegistrazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ruolo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SegmentoMarketing")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Versione")
                        .HasColumnType("int");

                    b.HasKey("UserSK");

                    b.ToTable("DimUser", "Analytics");
                });

            modelBuilder.Entity("TrackingService.Models.FactSession", b =>
                {
                    b.Property<long>("FactSessionSK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FactSessionSK"));

                    b.Property<int?>("ChannelSK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateSK")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceSK")
                        .HasColumnType("int");

                    b.Property<int?>("EventsCount")
                        .HasColumnType("int");

                    b.Property<int?>("JunkSK")
                        .HasColumnType("int");

                    b.Property<int?>("LocationSK")
                        .HasColumnType("int");

                    b.Property<int?>("PageViews")
                        .HasColumnType("int");

                    b.Property<int?>("SessionDurationSeconds")
                        .HasColumnType("int");

                    b.Property<int>("SessionSK")
                        .HasColumnType("int");

                    b.Property<int>("TimeSK")
                        .HasColumnType("int");

                    b.Property<int>("UserSK")
                        .HasColumnType("int");

                    b.HasKey("FactSessionSK");

                    b.ToTable("FactSession", "Analytics");
                });
#pragma warning restore 612, 618
        }
    }
}
