// <auto-generated />
using System;
using CucinaMammaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CucinaMammaAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250210102302_ModifichePreparazione")]
    partial class ModifichePreparazione
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CucinaMammaAPI.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImmagineId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Immagine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("IngredienteId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int?>("PassaggioPreparazioneId")
                        .HasColumnType("int");

                    b.Property<int?>("PassaggioPreparazioneId1")
                        .HasColumnType("int");

                    b.Property<int?>("RicettaId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId")
                        .IsUnique()
                        .HasFilter("[CategoriaId] IS NOT NULL");

                    b.HasIndex("IngredienteId");

                    b.HasIndex("PassaggioPreparazioneId1");

                    b.HasIndex("RicettaId");

                    b.ToTable("Immagini");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<int>("RicettaId")
                        .HasColumnType("int");

                    b.Property<string>("UnitaMisura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RicettaId");

                    b.ToTable("Ingredienti");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.PassaggioPreparazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ImmagineId")
                        .HasColumnType("int");

                    b.Property<int>("Ordine")
                        .HasColumnType("int");

                    b.Property<int>("RicettaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImmagineId");

                    b.HasIndex("RicettaId", "Ordine")
                        .IsUnique();

                    b.ToTable("PassaggiPreparazione");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.RegistroAttivita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AccessoSospetto")
                        .HasColumnType("bit");

                    b.Property<int>("Azione")
                        .HasColumnType("int");

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dispositivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndirizzoIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRicetta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RicettaId")
                        .HasColumnType("int");

                    b.Property<bool>("TentativoFallito")
                        .HasColumnType("bit");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RicettaId");

                    b.HasIndex("UtenteId");

                    b.ToTable("registroAttivitas");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Ricetta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficolta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TempoPreparazione")
                        .HasColumnType("int");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("Ricette");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.RicettaCategoria", b =>
                {
                    b.Property<int>("RicettaId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.HasKey("RicettaId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("RicetteCategorie");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.RicettaPreferita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataSalvataggio")
                        .HasColumnType("datetime2");

                    b.Property<int>("RicettaId")
                        .HasColumnType("int");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RicettaId");

                    b.HasIndex("UtenteId");

                    b.ToTable("RicettePreferite");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailVerificata")
                        .HasColumnType("bit");

                    b.Property<string>("FotoProfiloUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenScadenza")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ruolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimoAccesso")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.UtenteSocialLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCollegamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("UtentiSocialLogin");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Immagine", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Categoria", "Categoria")
                        .WithOne("Immagine")
                        .HasForeignKey("CucinaMammaAPI.Models.Immagine", "CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CucinaMammaAPI.Models.Ingrediente", "Ingrediente")
                        .WithMany("Immagini")
                        .HasForeignKey("IngredienteId");

                    b.HasOne("CucinaMammaAPI.Models.PassaggioPreparazione", "PassaggioPreparazione")
                        .WithMany()
                        .HasForeignKey("PassaggioPreparazioneId1");

                    b.HasOne("CucinaMammaAPI.Models.Ricetta", "Ricetta")
                        .WithMany("Immagini")
                        .HasForeignKey("RicettaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Categoria");

                    b.Navigation("Ingrediente");

                    b.Navigation("PassaggioPreparazione");

                    b.Navigation("Ricetta");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Ingrediente", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Ricetta", "Ricetta")
                        .WithMany("Ingredienti")
                        .HasForeignKey("RicettaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ricetta");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.PassaggioPreparazione", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Immagine", "Immagine")
                        .WithMany()
                        .HasForeignKey("ImmagineId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CucinaMammaAPI.Models.Ricetta", "Ricetta")
                        .WithMany("PassaggiPreparazione")
                        .HasForeignKey("RicettaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Immagine");

                    b.Navigation("Ricetta");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.RegistroAttivita", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Ricetta", null)
                        .WithMany("RegistriAttivita")
                        .HasForeignKey("RicettaId");

                    b.HasOne("CucinaMammaAPI.Models.Utente", "Utente")
                        .WithMany("RegistriAttivita")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Ricetta", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Utente", "Utente")
                        .WithMany("RicetteCreate")
                        .HasForeignKey("UtenteId");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.RicettaCategoria", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Categoria", "Categoria")
                        .WithMany("RicetteCategorie")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CucinaMammaAPI.Models.Ricetta", "Ricetta")
                        .WithMany("RicetteCategorie")
                        .HasForeignKey("RicettaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Ricetta");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.RicettaPreferita", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Ricetta", "Ricetta")
                        .WithMany("SalvataDaUtenti")
                        .HasForeignKey("RicettaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CucinaMammaAPI.Models.Utente", "Utente")
                        .WithMany("RicettePreferite")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ricetta");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.UtenteSocialLogin", b =>
                {
                    b.HasOne("CucinaMammaAPI.Models.Utente", "Utente")
                        .WithMany()
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Categoria", b =>
                {
                    b.Navigation("Immagine");

                    b.Navigation("RicetteCategorie");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Ingrediente", b =>
                {
                    b.Navigation("Immagini");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Ricetta", b =>
                {
                    b.Navigation("Immagini");

                    b.Navigation("Ingredienti");

                    b.Navigation("PassaggiPreparazione");

                    b.Navigation("RegistriAttivita");

                    b.Navigation("RicetteCategorie");

                    b.Navigation("SalvataDaUtenti");
                });

            modelBuilder.Entity("CucinaMammaAPI.Models.Utente", b =>
                {
                    b.Navigation("RegistriAttivita");

                    b.Navigation("RicetteCreate");

                    b.Navigation("RicettePreferite");
                });
#pragma warning restore 612, 618
        }
    }
}
